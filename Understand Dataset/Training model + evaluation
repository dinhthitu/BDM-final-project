from xgboost import XGBRegressor
from lightgbm import LGBMRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Initialize models
models = {
    "XGBoost": XGBRegressor(random_state=42, eval_metric='rmse'),
    "LightGBM": LGBMRegressor(random_state=42)
}

# Train vÃ  evaluate tá»«ng model
results = {}
for name, model in models.items():
    model.fit(X_train_scaled, y_train)
    y_pred = model.predict(X_test_scaled)
    
    # TÃ­nh metrics
    mae = mean_absolute_error(y_test, y_pred)
    rmse = mean_squared_error(y_test, y_pred, squared=False)
    r2 = r2_score(y_test, y_pred)
    
    results[name] = {"MAE": mae, "RMSE": rmse, "R2": r2}
    
    # In káº¿t quáº£
    print(f"\n{name} Performance:")
    print(f"- MAE: {mae:.2f} hours")
    print(f"- RMSE: {rmse:.2f} hours")
    print(f"- R2 Score: {r2:.2f}")

# So sÃ¡nh model tá»‘t hÆ¡n
best_model_name = min(results, key=lambda x: results[x]["RMSE"])
print(f"\nðŸ‘‰ Best Model: {best_model_name} (RMSE = {results[best_model_name]['RMSE']:.2f} hours)")

