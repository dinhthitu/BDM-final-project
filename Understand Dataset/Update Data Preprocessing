import pandas as pd
import xgboost as xgb
import lightgbm as lgb
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

# Load dữ liệu và tiền xử lý (như phần trước)
df = pd.read_csv('US_youtube_trending_data.csv')
df['publishedAt'] = pd.to_datetime(df['publishedAt'])
df['trending_date'] = pd.to_datetime(df['trending_date'])
df['hours_to_trend'] = (df['trending_date'] - df['publishedAt']).dt.total_seconds() / 3600
df = df.dropna(subset=['hours_to_trend'])

# Feature Engineering (không dùng engagement/ratio)
df['title_length'] = df['title'].str.len()
df['publish_hour'] = df['publishedAt'].dt.hour
df['publish_dayofweek'] = df['publishedAt'].dt.dayofweek
features = ['views', 'likes', 'dislikes', 'comments', 'categoryId', 'title_length', 'publish_hour', 'publish_dayofweek']
X = df[features]
y = df['hours_to_trend']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Hàm đánh giá mô hình
def evaluate_model(model, X_test, y_test):
    y_pred = model.predict(X_test)
    rmse = mean_squared_error(y_test, y_pred, squared=False)
    r2 = r2_score(y_test, y_pred)
    return {'RMSE': rmse, 'R2': r2}

# Khởi tạo và huấn luyện cả 2 mô hình
models = {
    'XGBoost': xgb.XGBRegressor(objective='reg:squarederror', n_estimators=200, max_depth=5, learning_rate=0.1, random_state=42),
    'LightGBM': lgb.LGBMRegressor(objective='regression', num_leaves=31, n_estimators=200, learning_rate=0.1, random_state=42)
}

results = {}
for name, model in models.items():
    model.fit(X_train, y_train)
    results[name] = evaluate_model(model, X_test, y_test)

# So sánh kết quả và chọn mô hình tốt nhất
best_model_name = min(results, key=lambda x: (results[x]['RMSE'], -results[x]['R2']))
best_model = models[best_model_name]
print(f"Mô hình tốt nhất: {best_model_name}")
print("Kết quả đánh giá:")
pd.DataFrame(results).T
