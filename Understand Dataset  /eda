# -*- coding: utf-8 -*-
"""EDA: Correlation Analysis with Category Breakdown"""
import json
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load category mapping
with open('category_ids.json') as f:
    CATEGORY_MAP = {int(item['id']): item['snippet']['title'] 
                   for item in json.load(f)['items']}

def analyze_correlation(df):
    """Phân tích correlation và ảnh hưởng theo category"""
    # 1. Correlation matrix tổng
    numeric_cols = ['hours_to_trend', 'view_count', 'likes', 'comment_count', 
                   'title_length', 'tag_count', 'publish_hour']
    corr = df[numeric_cols].corr()
    
    plt.figure(figsize=(12, 10))
    sns.heatmap(corr, annot=True, cmap='coolwarm', center=0, fmt=".2f")
    plt.title('Correlation Between Numeric Variables', pad=20)
    plt.savefig('output/correlation_matrix.png', dpi=120, bbox_inches='tight')
    plt.close()
    
    # 2. Xác định biến ảnh hưởng nhất đến trending
    most_influential = corr['hours_to_trend'].abs().sort_values(ascending=False).index[1]
    print(f"Biến ảnh hưởng nhất đến thời gian trending: {most_influential}")
    
    # 3. Phân tích biến này theo từng category
    plt.figure(figsize=(14, 8))
    sns.boxplot(data=df, x='categoryId', y=most_influential, 
               hue='hours_to_trend', palette='viridis')
    plt.xticks(ticks=range(len(CATEGORY_MAP)), 
              labels=[CATEGORY_MAP.get(x, x) for x in sorted(df['categoryId'].unique())],
              rotation=90)
    plt.xlabel('Category')
    plt.ylabel(most_influential)
    plt.title(f'Phân bổ {most_influential} theo Category', pad=20)
    plt.legend(title='Hours to Trend')
    plt.tight_layout()
    plt.savefig(f'output/{most_influential}_by_category.png', dpi=120)
    plt.close()

if __name__ == "__main__":
    import os
    os.makedirs('output', exist_ok=True)
    
    df = pd.read_csv("data/processed_data.csv")
    df['category_name'] = df['categoryId'].map(CATEGORY_MAP)
    analyze_correlation(df)
